@*Route*@
@page "/companies"

@*Getting HttpClient class*@
@inject HttpClient http

@*Accessing shared files*@
@*Added to the import.razor file also*@
@using ManagementAppCW02.Shared.Models;

@*For JS confirmations*@
@inject IJSRuntime js

@*For redirecting purposes*@
@inject NavigationManager Navigation


<h3 class="mb-5">Companies</h3>

@if (companies == null)
{
    <text>Loading..</text>
}
else if (companies.Length == 0)
{
    <text>No Record Found</text>
}
else
{
    <table class="table table-striped">
        <thead class="table-dark">
            <tr>
                <th style="text-align:center">Company Name</th>
                <th style="text-align:center">Company Type</th>
                <th style="text-align:center">Employees</th>
                <th style="text-align:center">Actions</th>
                @*<th>Delete</th>*@
            </tr>
        </thead>
        <tbody>
            @foreach(var company in companies)
            {
                <tr>
                    <td style="text-align:center">
                        @company.companyName
                    </td>
                    <td style="text-align:center">
                        @company.companyType
                    </td>
                    <td style="text-align:center">
                        @company.numOfEmployees
                    </td>
                    <td style="text-align:center">
                        <button class="btn btn-success" @onclick="@(() => UpdateCompany(company.companyName))">Update</button>
                        <button class="btn btn-danger" @onclick="@(() => DeleteCompany(company.companyName))">Delete</button>
                    </td>
                </tr>   
            }
        </tbody>
    </table>

    <a class="btn btn-success mt-5" href="/companies/createcompany">Add Copmpany</a>
}

@code {
    // An object array of company objects - CompanyModel
    CompanyModel[] companies { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await LoadComapnies();
    }

    async Task LoadComapnies()
    {
        companies = await http.GetFromJsonAsync<CompanyModel[]>("api/company");

    }

    async Task DeleteCompany(string companyName)
    {
        if(await js.InvokeAsync<bool>("confirm", "Are you sure you want to delete ?"))
        {
            //Console.WriteLine("Works");
            await http.DeleteAsync($"api/company/{companyName}");
            await LoadComapnies();
        }
    }

    async Task UpdateCompany(string companyName)
    {
       if(await js.InvokeAsync<bool>("confirm", "Are you sure you want to edit ?"))
        {
            //Console.WriteLine("Works");
            Navigation.NavigateTo($"/companies/edit/{companyName}");
            await LoadComapnies();
        } 
    }
}
