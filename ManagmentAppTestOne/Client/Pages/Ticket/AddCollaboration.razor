@*Route*@
@page "/collaboration/create/{projectId:guid}"

@*Getting HttpClient class*@
@inject HttpClient http

@*For redirecting purposes*@
@inject NavigationManager Navigation


@if (users == null)
{
    <text>Loading..</text>
}
else if (users.Length == 0)
{
    <text>No Record Found</text>
}
else
{
    <div class="container assign-user-section my-auto">
        <div class="row">

            <div class="col-12 col-sm-12 col-md-6 col-lg-6 my-auto">
                <img class="assign-user-img mx-auto d-block align-self-center" src="img/Collaboration/Manage Collab Image.png">
            </div>

            <div class="col-12 col-sm-12 col-md-6 col-lg-6 my-auto">

                <EditForm Model="@collaboration" OnValidSubmit="@CreateCollaboration">
                    <DataAnnotationsValidator></DataAnnotationsValidator>

                    @if ( projects != null )
                    {
                        @foreach (var item in projects)
                        {
                            if( item.ProjectId == projectId)
                            {
                                <h4 id="assign-user-text">Assign an Employee <br> For  
                                    <a style="color: #6C60FF; text-decoration: none; font-weight: 600;" 
                                    href=""> 
                                    @item.ProjectName </a> 
                                </h4>
                            }
                        }
                    }
                    
                    <div class="form-group">
                         <label id="label-text" for="InputAssignedUser">Assign an Employee</label>
                            <InputSelect @bind-Value="collaboration.UserId" class="form-control"
                                aria-describedby="emailHelp" placeholder="Select a user">
                                @foreach(var user in users)
                                {
                                    <option style="font-weight: 600;" value="@user.UserId">@user.UserName</option>
                                }
                            </InputSelect>
                     </div>
                    <button type="submit" class="btn ticket-btn">Assign User</button>
                </EditForm>
            </div>

        </div>
    </div>
}


@code {

    CollaborationEntity collaboration = new CollaborationEntity();

    UserEntity[] users { get; set; }
    ProjectEntity[] projects { get; set; }

    [Parameter] public Guid projectId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        users = await http.GetFromJsonAsync<UserEntity[]>("api/user");
        projects = await http.GetFromJsonAsync<ProjectEntity[]>("api/project");
    }

    async Task CreateCollaboration()
    {
        collaboration.ProjectId = projectId;
        await http.PostAsJsonAsync("api/collaboration", collaboration);
        Navigation.NavigateTo($"tickets/{projectId}");
    }
}
