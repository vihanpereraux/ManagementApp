@*Route*@
@page "/tickets/create/{projectId:guid}"

@*Getting HttpClient class*@
@inject HttpClient http

@*For redirecting purposes*@
@inject NavigationManager Navigation

@*For JS confirmations*@
@inject IJSRuntime js


<div class="container my-auto">
        <div class="row">

            <div class="col-12 col-sm-12 col-md-6 col-lg-6 my-auto">
                <img class="manage-ticket-img mx-auto d-block align-self-center" src="img/Ticket/Manage Ticket Image.png">
            </div>

            <div class="col-12 col-sm-12 col-md-6 col-lg-6 my-auto">
                <CollaborationForm buttonText = "Add Ticket" projectId = "@projectId" ticket = "@ticket" OnValidSubmit = "@CreateTicket"></CollaborationForm>
            </div>
    </div>
</div>



@if (users == null)
{
    <text>Loading..</text>
}
else if (users.Length == 0)
{
    <text>No Record Found</text>
}
else
{
    <div class="container">
        <div class="row">
            <div class="col-lg-6 my-auto">
                <h3 class="tickets-heading">Already <br> Assigned Users</h3>
            </div>
        </div>
    </div>

    <table class="table">
        <thead class="table-header">
            <tr>
                <th style="text-align:left; font-weight: 600; padding-top: 20px; padding-bottom: 20px;">Name</th>
                <th style="text-align:left; font-weight: 600; padding-top: 20px; padding-bottom: 20px;">Occupation</th>
                <th style="text-align:left; font-weight: 600; padding-top: 20px; padding-bottom: 20px;">Capacity</th>
            </tr>
        </thead>
        <tbody>
            @foreach(var user in users)
            {
                <tr>
                    <td class="col-lg-3" style="text-align:left; font-family: 'Gilroy'; 
                        font-weight: 500; padding-top: 20px; padding-bottom: 20px;">
                        
                        <a style="color: #6C60FF; text-decoration: none; font-weight: 600;" 
                            href = "">@user.UserName</a>
                    </td>
                    <td class="col-lg-3 pr-3" style="text-align:left; font-family: 'Gilroy'; 
                        font-weight: 500; padding-top: 20px; padding-bottom: 20px; font-size: 15px;">
                        @user.UserOccupation
                    </td>
                    <td class="col-lg-6" style="text-align:left; font-family: 'Gilroy'; 
                        font-weight: 500; padding-top: 20px; padding-bottom: 20px; font-size: 15px; line-height:2.0;">
                        @user.UserCapacity
                    </td>
                </tr>   
            }
        </tbody>
    </table>
}
@code {

    [Parameter] public Guid projectId { get; set; }

    TicketEntity ticket = new TicketEntity();

    UserEntity[] users { get; set; }

    UserEntity[] allUsers { get; set; }

    protected override async Task OnInitializedAsync()
    {
        users = await http.GetFromJsonAsync<UserEntity[]>($"api/collaboration/{projectId}");
        allUsers = await http.GetFromJsonAsync<UserEntity[]>("api/user");
    }

    async Task CreateTicket()
    {
        ticket.ProjectId = projectId;
        var result = await http.PostAsJsonAsync("api/ticket", ticket);
        if (result.IsSuccessStatusCode)
        {
            Navigation.NavigateTo($"/tickets/{projectId}");
        }
        else
        {
            await js.InvokeVoidAsync("alert", $"This ticket is already existing in the system");
            Navigation.NavigateTo($"/tickets/create/{projectId}");
        }
        
    }

}
