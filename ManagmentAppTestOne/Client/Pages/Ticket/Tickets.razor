@*Route*@
@page "/tickets/{projectId:guid}"

@*Getting HttpClient class*@
@inject HttpClient http

@*For JS confirmations*@
@inject IJSRuntime js

@*For redirecting purposes*@
@inject NavigationManager Navigation

<h3 class="mb-5">Tickets</h3>

@if (tickets == null)
{
    <text>Loading..</text>
}
else if (tickets.Length == 0)
{
    <text>No Record Found</text>
}
else
{
    <table class="table table-striped">
        <thead class="table-dark">
            <tr>
                <th style="text-align:center">Task</th>
                <th style="text-align:center">Description</th>
                <th style="text-align:center">State</th>
                <th style="text-align:center">Incharge</th>
                <th style="text-align:center"></th>
                @*<th>Delete</th>*@
            </tr>
        </thead>
        <tbody>
            @foreach(var ticket in tickets)
            {
                <tr>
                    <td class="col-lg-2" style="text-align:center; width:50%">
                        @ticket.TicketTitle
                    </td>
                    <td class="col-lg-5 pr-3" style="text-align:center">
                        @ticket.TicketDescription
                    </td>
                    <td class="col-lg-1" style="text-align:center">
                        @ticket.TicketState
                    </td>
                    <td class="col-lg-2" style="text-align:center">
                        @foreach(var user in users)
                        {
                            @if(@ticket.UserId == @user.UserId)
                            {
                                @user.UserName
                            }
                        }
                    </td>
                    <td class="col-lg-5" style="text-align:center">
                        <button class="btn btn-success" href="" @onclick="@(() => UpdateTicket(ticket.TicketTitle))">Update</button>
                        <button class="btn btn-danger" @onclick="@(() => DeleteTicket(ticket.TicketTitle))">Delete</button>
                    </td>
                </tr>   
            }
        </tbody>
    </table>

    <a class="btn btn-success mt-5" href="/tickets/create/@projectId">Add Task</a>
}

@code {

    [Parameter] public Guid projectId { get; set; }

    // An object array of ticket objects - TicketEntity
    TicketEntity[] tickets { get; set; }
    UserEntity[] users { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await LoadTickets();
    }

    async Task LoadTickets()
    {
        tickets = await http.GetFromJsonAsync<TicketEntity[]>($"api/ticket/{projectId}");
        users = await http.GetFromJsonAsync<UserEntity[]>("api/user");
    }

    async Task UpdateTicket(string ticketName)
    {
        
    }

    async Task DeleteTicket(string ticketName)
    {
        
    }

}
