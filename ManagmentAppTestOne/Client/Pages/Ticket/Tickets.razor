@*Route*@
@page "/tickets/{projectId:guid}"

@*Getting HttpClient class*@
@inject HttpClient http

@*For JS confirmations*@
@inject IJSRuntime js

@*For redirecting purposes*@
@inject NavigationManager Navigation

@inject ISyncLocalStorageService LocalStorage

@using System.Linq;


@if (tickets == null && users == null)
{
    <text>Loading..</text>
}
else if (tickets.Length == 0)
{
    <text>No Record Found</text>
}
else
{
    <div class="container">
        <div class="row">
            <div class="col-lg-6 my-auto">
                <h3 class="company-heading">Discover <br> Your Project Tickets</h3>
            </div>
            <div class="col-lg-6 my-auto">
                <a class="btn add-company-btn" href="/tickets/create/@projectId"><p>Add ticket</p></a>
            </div>
        </div>
    </div>

    <table class="table">
        <thead class="table-header">
            <tr>
                <th style="text-align:left; font-weight: 600; padding-top: 20px; padding-bottom: 20px;">Task</th>
                <th style="text-align:left; font-weight: 600; padding-top: 20px; padding-bottom: 20px;">Description</th>
                <th style="text-align:center; font-weight: 600; padding-top: 20px; padding-bottom: 20px;">State</th>
                <th style="text-align:center; font-weight: 600; padding-top: 20px; padding-bottom: 20px;">Incharge</th>
                <th style="text-align:center; font-weight: 600; padding-top: 20px; padding-bottom: 20px;"></th>
                @*<th>Delete</th>*@
            </tr>
        </thead>
        <tbody>
            @foreach(var ticket in tickets)
            {
                <tr>
                    <td class="col-lg-2" style="text-align:left; font-family: 'Gilroy'; 
                        font-weight: 500; padding-top: 20px; padding-bottom: 20px;">
                        @ticket.TicketTitle
                    </td>
                    <td class="col-lg-5 pr-3" style="text-align:left; font-family: 'Gilroy'; 
                        font-weight: 500; padding-top: 20px; padding-bottom: 20px; font-size: 15px; line-height:2.0;">
                        @ticket.TicketDescription
                    </td>
                    <td class="col-lg-1" style="text-align:center; font-family: 'Gilroy'; 
                        font-weight: 500; padding-top: 20px; padding-bottom: 20px; font-size: 15px;">
                        @ticket.TicketState
                    </td>
                    <td class="col-lg-2" style="text-align:center; font-family: 'Gilroy'; 
                        font-weight: 500; padding-top: 20px; padding-bottom: 20px; font-size: 15px;">                         
                        @foreach( var user in users )
                        {
                            @if( @ticket.UserId == @user.UserId )
                            {
                                <p>@user.UserName</p>
                            }   
                        }
                    </td>
                    <td class="col-lg-4" style="text-align:center; 
                        padding-top: 20px; padding-bottom: 20px;">
                        <button class="btn update-btn" href="/tickets/edit/@ticket.TicketTitle/@projectId" @onclick="@(() => UpdateTicket(ticket.TicketTitle))"><p>Update</p></button>
                        <button class="btn delete-btn" @onclick="@(() => DeleteTicket(ticket.TicketTitle))"><p>Delete</p></button>
                    </td>
                </tr>   
            }
        </tbody>
    </table>
}

<div style="margin-top: 100px;"></div>


@if (users == null)
{
    <text>Loading..</text>
}
else if (users.Length == 0)
{
    <text>No Record Found</text>
}
else
{   
    <div class="container">
        <div class="row">
            <div class="col-lg-6 my-auto">
                <h3 class="company-heading">Already <br> Assigned Employees</h3>
            </div>
            <div class="col-lg-6 my-auto">
                <a class="btn add-company-btn" href="/collaboration/create/@projectId"><p>Assign employee</p></a>
            </div>
        </div>
    </div>

    <table class="table">
        <thead class="table-header">
            <tr>
                <th style="text-align:left; font-weight: 600; padding-top: 20px; padding-bottom: 20px;">Name</th>
                <th style="text-align:left; font-weight: 600; padding-top: 20px; padding-bottom: 20px;">Occupation</th>
                <th style="text-align:left; font-weight: 600; padding-top: 20px; padding-bottom: 20px;">Capacity</th>
                <th style="text-align:left; font-weight: 600; padding-top: 20px; padding-bottom: 20px;"></th>
            </tr>
        </thead>
        <tbody>
            @foreach(var user in users)
            {
                <tr>
                    <td class="col-lg-2" style="text-align:left; font-family: 'Gilroy'; 
                        font-weight: 500; padding-top: 20px; padding-bottom: 20px;">
                        @user.UserName 
                    </td>
                    <td class="col-lg-2" style="text-align:left; font-family: 'Gilroy'; 
                        font-weight: 500; padding-top: 20px; padding-bottom: 20px; font-size: 15px; line-height:2.0;">
                        @user.UserOccupation
                    </td>
                    <td class="col-lg-6" style="text-align:left; font-family: 'Gilroy'; 
                        font-weight: 500; padding-top: 20px; padding-bottom: 20px; font-size: 15px; line-height:2.0;">
                        @user.UserCapacity
                    </td>
                    <td class="col-lg-2" style="text-align:center; 
                        padding-top: 20px; padding-bottom: 20px;">
                        <button class="btn delete-btn" @onclick="@(() => DeleteCollaboration(@user.UserId))"><p>Remove</p></button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
@*<a class="btn btn-success mt-3" href="/collaboration/create/@projectId">Assign Users</a>*@

@code {

    [Parameter] public Guid projectId { get; set; }

    // An object array of ticket objects - TicketEntity
    TicketEntity[] tickets { get; set; }

    UserEntity[] users { get; set; }

    CollaborationEntity[] collaborations { get; set; }

    ProjectEntity[] projects { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (!string.IsNullOrEmpty(LocalStorage.GetItemAsString("username")))
        {   
            await LoadTickets();    
        }
        else
        {
            Navigation.NavigateTo("/login");
        }

    }

    async Task LoadTickets()
    {
        tickets = await http.GetFromJsonAsync<TicketEntity[]>($"api/ticket/{projectId}");

        collaborations = await http.GetFromJsonAsync<CollaborationEntity[]>($"api/collaboration");

        users = await http.GetFromJsonAsync<UserEntity[]>($"api/collaboration/{projectId}");

        projects = await http.GetFromJsonAsync<ProjectEntity[]>("api/project");
    }

    async Task UpdateTicket(string ticketName)
    {
        if(await js.InvokeAsync<bool>("confirm", "Are you sure you want to edit ?"))
        {
            //Console.WriteLine("Works");
            Navigation.NavigateTo($"/tickets/edit/{ticketName}/{projectId}");
            await LoadTickets();
        }
    }

    async Task DeleteTicket(string ticketName)
    {
        if(await js.InvokeAsync<bool>("confirm", "Are you sure you want to delete ?"))
        {
            //Console.WriteLine("Works");
            await http.DeleteAsync($"api/ticket/{ticketName}");
            await LoadTickets();
        }
    }

    async Task DeleteCollaboration(Guid userId)
    {
        foreach (var collaboration in collaborations)
            {   
                if(collaboration.UserId == userId && collaboration.ProjectId == projectId)
                {
                    await http.DeleteAsync($"api/collaboration/{collaboration.CollaborationId}");
                }
            }
            await LoadTickets();
    }

}
