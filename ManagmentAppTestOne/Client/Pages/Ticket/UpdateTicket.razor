@*Route*@
@page "/tickets/edit/{ticketName}/{projectId:guid}"

@*Getting HttpClient class*@
@inject HttpClient http

@*For redirecting purposes*@
@inject NavigationManager Navigation


<div class="container my-auto">
    <div class="row">

        <div class="col-12 col-sm-12 col-md-6 col-lg-6 my-auto">
           <img class="manage-ticket-img mx-auto d-block align-self-center" src="img/Ticket/Manage Ticket Image.png">
        </div>

        <div class="col-12 col-sm-12 col-md-6 col-lg-6 my-auto">
            <CollaborationForm buttonText = "Update Ticket" projectId = "@projectId" ticket = "@ticket" OnValidSubmit = "@UpdateTickets"></CollaborationForm>
        </div>
            
    </div>
</div>


@if (users == null)
{
    <text>Loading..</text>
}
else if (users.Length == 0)
{
    <text>No Record Found</text>
}
else
{
    <div class="container">
        <div class="row">
            <div class="col-lg-6 my-auto">
                <h3 class="tickets-heading">Already <br> Assigned Users</h3>
            </div>
        </div>
    </div>

    <table class="table">
        <thead class="table-header">
            <tr>
                <th style="text-align:left; font-weight: 600; padding-top: 20px; padding-bottom: 20px;">Name</th>
                <th style="text-align:left; font-weight: 600; padding-top: 20px; padding-bottom: 20px;">Occupation</th>
                <th style="text-align:left; font-weight: 600; padding-top: 20px; padding-bottom: 20px;">Capacity</th>
            </tr>
        </thead>
        <tbody>
            @foreach(var user in users)
            {
                <tr>
                    <td class="col-lg-3" style="text-align:left; font-family: 'Gilroy'; 
                        font-weight: 500; padding-top: 20px; padding-bottom: 20px;">
                        @user.UserName
                    </td>
                    <td class="col-lg-3 pr-3" style="text-align:left; font-family: 'Gilroy'; 
                        font-weight: 500; padding-top: 20px; padding-bottom: 20px; font-size: 15px;">
                        @user.UserOccupation
                    </td>
                    <td class="col-lg-6" style="text-align:left; font-family: 'Gilroy'; 
                        font-weight: 500; padding-top: 20px; padding-bottom: 20px; font-size: 15px; line-height:2.0;">
                        @user.UserCapacity
                    </td>
                </tr>   
            }
        </tbody>
    </table>
}



@code {

    [Parameter] public string ticketName { get; set; }

    [Parameter] public Guid projectId { get; set; }

    TicketEntity ticket = new TicketEntity();

    UserEntity[] users { get; set; }

    protected async override Task OnParametersSetAsync()
    {
        ticket = await http.GetFromJsonAsync<TicketEntity>($"api/ticket/{ticketName}");
        users = await http.GetFromJsonAsync<UserEntity[]>($"api/collaboration/{projectId}");
    }

    async Task UpdateTickets()
    {
        await http.PutAsJsonAsync("api/ticket", ticket);
        Navigation.NavigateTo($"/tickets/{projectId}");
    }

}
